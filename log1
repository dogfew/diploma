29%|██▊       | 287/1000 [16:01<39:48,  3.35s/it, LR=7.117794230256498e-05]
Traceback (most recent call last):
  File "/home/vladimir/PycharmProjects/diploma/main.py", line 24, in <module>
    trainer.train(1000, episode_length=30)
  File "/home/vladimir/PycharmProjects/diploma/trainer/trainer.py", line 85, in train
    df = self.train_epoch(max_episode_length=episode_length, order=None)
         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vladimir/PycharmProjects/diploma/trainer/trainer.py", line 186, in train_epoch
    actions, log_probs = self.get_actions(x, policies, firm_id=firm_id)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vladimir/PycharmProjects/diploma/trainer/trainer.py", line 287, in get_actions
    action_j, log_prob_j = policies[j].net(x[:, j, :])
                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vladimir/PycharmProjects/diploma/venv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vladimir/PycharmProjects/diploma/venv/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/vladimir/PycharmProjects/diploma/models/policy/beta_policy.py", line 57, in forward
    buy_distr = Dirichlet(buy_params)
                ^^^^^^^^^^^^^^^^^^^^^
  File "/home/vladimir/PycharmProjects/diploma/venv/lib/python3.11/site-packages/torch/distributions/dirichlet.py", line 59, in __init__
    super().__init__(batch_shape, event_shape, validate_args=validate_args)
  File "/home/vladimir/PycharmProjects/diploma/venv/lib/python3.11/site-packages/torch/distributions/distribution.py", line 68, in __init__
    raise ValueError(
ValueError: Expected parameter concentration (Tensor of shape (128, 9)) of distribution Dirichlet(concentration: torch.Size([128, 9])) to satisfy the constraint IndependentConstraint(GreaterThan(lower_bound=0.0), 1), but found invalid values:
tensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]], device='cuda:0')
